<?xml version="1.0" encoding="UTF-8"?>

<!-- 
Participants/Participant elements
Schema - http://www.talkbank.org/software/talkbank.xsd
XPath -	/xs:schema/xs:element[@name="CHAT"]/xs:complexType/xs:sequence/xs:element[@name="Participants"]
		/xs:schema/xs:complexType[@name="participantType"]
-->
<chunk xmlns="https://www.phon.ca/ns/chunk">
    
    <!-- Parser -->
    <buffer name="Chat.g">
        <![CDATA[
participants 
	:	PARTICIPANTS_START participant* PARTICIPANTS_END 
	->	^(PARTICIPANTS_START participant*)
	;
	
participant 
	:	PARTICIPANT_START part_attr* PARTICIPANT_END 
	->	^(PARTICIPANT_START part_attr*)
	;
	
part_attr
	:	PARTICIPANT_ATTR_ID
	|	PARTICIPANT_ATTR_NAME
	|	PARTICIPANT_ATTR_ROLE
	|	PARTICIPANT_ATTR_LANGUAGE
	|	PARTICIPANT_ATTR_AGE
	|	PARTICIPANT_ATTR_GROUP
	|	PARTICIPANT_ATTR_SEX
	|	PARTICIPANT_ATTR_SES
	|	PARTICIPANT_ATTR_EDUCATION
	|	PARTICIPANT_ATTR_FIRST_LANGUAGE
	|	PARTICIPANT_ATTR_BIRTHPLACE
	|	PARTICIPANT_ATTR_BIRTHDAY
	;
]]>
    </buffer>
    
    <!-- Tree Walker -->
    <buffer name="ChatTree.g">
    	<![CDATA[
participants 
	:	^(PARTICIPANTS_START participant*)
	;
	
participant returns [Participant val]
scope {
	Participant p;
}
@init {
	$participant::p = sessionFactory.createParticipant();
}
@after {
	$val = $participant::p;
}
	:	^(PARTICIPANT_START part_attr*)
	;
	
part_attr
	:	PARTICIPANT_ATTR_ID
	{	$participant::p.setId($PARTICIPANT_ATTR_ID.text);	}
	|	PARTICIPANT_ATTR_NAME
	{	$participant::p.setName($PARTICIPANT_ATTR_NAME.text.replaceAll("_", " "));	}
	|	PARTICIPANT_ATTR_ROLE
	{	$participant::p.setRole(
			ParticipantRole.fromString($PARTICIPANT_ATTR_ROLE.text.replaceAll("_", " ")));	}
	|	PARTICIPANT_ATTR_LANGUAGE
	{	$participant::p.setLanguage($PARTICIPANT_ATTR_LANGUAGE.text);	}
	|	PARTICIPANT_ATTR_AGE
	{
		DateTime date = session.getDate();
		AgeFormatter formatter = new AgeFormatter();
		
		try {
			Period age = formatter.parse($PARTICIPANT_ATTR_AGE.text);
			$participant::p.setAge(age);
		} catch (ParseException e) {
			LOGGER.log(Level.WARNING, e.getLocalizedMessage(), e);
		}
		
	}
	|	PARTICIPANT_ATTR_GROUP
	{	$participant::p.setGroup($PARTICIPANT_ATTR_GROUP.text);		}
	|	PARTICIPANT_ATTR_SEX
	{
		Sex pSex = ($PARTICIPANT_ATTR_SEX.text.equalsIgnoreCase("male") ? Sex.MALE : Sex.FEMALE);
		$participant::p.setSex(pSex);
	}
	|	PARTICIPANT_ATTR_SES
	{	$participant::p.setSES($PARTICIPANT_ATTR_SES.text);		}
	|	PARTICIPANT_ATTR_EDUCATION
	{	$participant::p.setEducation($PARTICIPANT_ATTR_EDUCATION.text);		}
	|	PARTICIPANT_ATTR_FIRST_LANGUAGE
	{	
		LOGGER.warning("Attribute 'first-language' not supported.");
	}
	|	PARTICIPANT_ATTR_BIRTHPLACE
	{
		LOGGER.warning("Attribute 'birthplace' not supported.");
	}
	|	PARTICIPANT_ATTR_BIRTHDAY
	{
		DateFormatter formatter = new DateFormatter();
		
		try {
			DateTime bday = formatter.parse($PARTICIPANT_ATTR_BIRTHDAY.text);
			$participant::p.setBirthDate(bday);
		} catch (ParseException e) {
			LOGGER.log(Level.WARNING, e.getLocalizedMessage(), e);
		}
	}
	;
]]>
    </buffer>
	
	<buffer name="Phon2XmlWalker.g">
		<![CDATA[
participants 
	:	^(PARTICIPANTS_START (partlist+=participant)*)
	->	template(parts={$partlist})
	<<
\<Participants\>
<parts; separator="">
\</Participants\>
	>>
	;
		
participant
	:	^(PARTICIPANT_START (attrlist+=part_attr)*)
	->	template(
			attrs={$attrlist}
		)
	<<
\<participant
	<attrs; separator="\n"> /\>
	>>
	;
	
part_attr
	:	PARTICIPANT_ATTR_ID
	->	template(id={$PARTICIPANT_ATTR_ID.text})
		"id=\"<id>\""
	|	PARTICIPANT_ATTR_NAME
	->	template(name={$PARTICIPANT_ATTR_NAME.text})
		"name=\"<name>\""
	|	PARTICIPANT_ATTR_ROLE
	->	template(role={$PARTICIPANT_ATTR_ROLE.text})
		"role=\"<role>\""
	|	PARTICIPANT_ATTR_LANGUAGE
	->	template(language={$PARTICIPANT_ATTR_LANGUAGE.text})
		"language=\"<language>\""
	|	PARTICIPANT_ATTR_AGE
	->	template(age={$PARTICIPANT_ATTR_AGE.text})
		"age=\"<age>\""
	|	PARTICIPANT_ATTR_GROUP
	->	template(grp={$PARTICIPANT_ATTR_GROUP.text})
		"group=\"<grp>\""
	|	PARTICIPANT_ATTR_SEX
	->	template(sex={$PARTICIPANT_ATTR_SEX.text})
		"sex=\"<sex>\""
	|	PARTICIPANT_ATTR_SES
	->	template(ses={$PARTICIPANT_ATTR_SES.text})
		"ses=\"<ses>\""
	|	PARTICIPANT_ATTR_EDUCATION
	->	template(edu={$PARTICIPANT_ATTR_EDUCATION.text})
		"education=\"<edu>\""
	|	PARTICIPANT_ATTR_FIRST_LANGUAGE
	->	template(flang={$PARTICIPANT_ATTR_FIRST_LANGUAGE.text})
		"first-language=\"<flang>\""
	|	PARTICIPANT_ATTR_BIRTHPLACE
	->	template(birthplace={$PARTICIPANT_ATTR_BIRTHPLACE.text})
		"birthplace=\"<birthplace>\""
	|	PARTICIPANT_ATTR_BIRTHDAY
	->	template(birthday={$PARTICIPANT_ATTR_BIRTHDAY.text})
		"birthday=\"<birthday>\""
	;
]]>
	</buffer>
    
</chunk>