<?xml version="1.0" encoding="UTF-8"?>

<!-- 
    tagMarker
    XPath - /xs:schema/xs:complexType[@name="tagMarkerType"]
-->
<chunk xmlns="https://www.phon.ca/ns/chunk">
    
    <!-- Parser -->
    <buffer name="TalkBank2AST.g">
        <![CDATA[
tagmarker
	:	TAGMARKER_START TAGMARKER_ATTR_TYPE mor* TAGMARKER_END
	->	^(TAGMARKER_START TAGMARKER_ATTR_TYPE mor*)
	;
]]>
    </buffer>
    
    <!-- Tree Walker -->
    <buffer name="AST2Phon.g">
        <![CDATA[
tagmarker returns [String val]
@init {
	List<Tuple<String, String>> morvals = new ArrayList<Tuple<String, String>>();
}
	:	^(TAGMARKER_START TAGMARKER_ATTR_TYPE (mor {morvals.add(new Tuple($mor.tierName, $mor.val));})*)
	{
	    String tmType = $TAGMARKER_ATTR_TYPE.text;
	    if(tmType.equals("comma")) {
	        $val = ",";
	    } else if(tmType.equals("tag")) {
	        $val = "\u201E";
	    } else if(tmType.equals("vocative")) {
	        $val = "\u2021";
	    }
	    
	    // add mor to mor tier as necessary
	    for(Tuple<String, String> morData:morvals) {
	    	// mor is handled as a seperate dependent tier
			String morVal = morData.getObj2();
			String tierName = morData.getObj1();

			if($g.size() > 0) {
                // add to group data
                Map<Integer, String> trMap = $g::trMaps.get(tierName);
                if(trMap == null) {
                    trMap = new LinkedHashMap<>();
                    $g::trMaps.put(tierName, trMap);
                }
                String val = (trMap.containsKey($g::pgCount) ? trMap.get($g::pgCount) : "");
                val += (val.length() > 0 ? " " : "") + morVal;
                trMap.put($g::pgCount, val);
            } else {
                // make sure dep tier exists in session
                TierDescription tierDesc = ensureTierExists(tierName, true);

                Tier<String> morTier = $u::r.getTier(tierName, String.class);
                if(morTier == null) {
                    morTier = sessionFactory.createTier(tierName, String.class, true);
                    for(int i = 0; i < $u::r.numberOfGroups(); i++) morTier.addGroup();
                    $u::r.putTier(morTier);
                }

                Group group = null;
                // get the correct word group holder
                if($t.size() > 0 || $ugrp.size() > 0) {
                    group = ($t.size() > 0 ? $t::g : $ugrp::g);
                } else if($u::r.numberOfGroups() > 0) {
                    group = $u::r.getGroup($u::r.numberOfGroups()-1);
                }

                String tierValue = group.getTier(tierName, String.class);
                if(tierValue == null) tierValue = new String();
                tierValue +=
                    (tierValue.length() == 0 ? "" : " ") + morVal;
                group.setTier(tierName, String.class, tierValue);
			}
	    }
	}
	;
]]>
    </buffer>
    
    <buffer name="AST2TalkBank.g">
        <![CDATA[
tagmarker
	:	^(TAGMARKER_START TAGMARKER_ATTR_TYPE (morlist+=mor)*)
	->    template(  type={$TAGMARKER_ATTR_TYPE.text},
	                 morcontent={$morlist}
	              )
	"\<tagMarker type=\"<type>\"\><if(morcontent)><morcontent><endif>\</tagMarker\>"
	;
]]>
    </buffer>
    
    <!-- Includes -->
    <include>mor.xml</include>
    
</chunk>