<?xml version="1.0" encoding="UTF-8"?>

<!-- 
Phonetic Group
XPath - /xs:schema/xs:complexType[@name="phoneticGroupType"]
-->
<chunk xmlns="https://www.phon.ca/ns/chunk">
    
    <!-- Parser -->
    <buffer name="TalkBank2AST.g">
        <![CDATA[
pg
scope {
	boolean inPg;
}
@init {
	$pg::inPg = true;
}
@after {
	$pg::inPg = false;
}
	:	PG_START ( pgele )* ( pho )* align? PG_END
	->	^(PG_START pgele* pho* align?)
	;
	
pgele
	:	w
	|	g
	|	quotation
	|	quotation2
	|	pause
	|	internal_media
	|	freecode
	|  	e
	|	s
	|	tagmarker
	|	long_feature
	|	nonvocal
	|	overlap_point
	|	underline
	|	italic
	;
]]>
    </buffer>
    
    <!-- Tree Walker -->
    <buffer name="AST2Phon.g">
        <![CDATA[
pg returns [String val]
scope {
	String buffer;
	int phoCount;
}
@init {
	$pg::buffer = new String();
	if($g.size() > 0) {
		$g::pgCount++;
	}
}
@after {
	$val = $pg::buffer.toString();
}
	:	^(PG_START pgele* pho* align?)
	;
	
pgele returns [String val]
@init {
	$val = new String();
}
@after {
	$pg::buffer += ($pg::buffer.length() > 0 ? " " : "") + $val;
}
	:	w 
	{
		$val = $w.val;
	}
	|	g
	{
		$val = "{" + $g.val + " }";
	}
	|	quotation
	{
		// TODO quotation
		LOGGER.warning("quotation not supported");
	}
	|	quotation2
	{
		// TODO quotation2
		LOGGER.warning("quotation2 not supported");
	}
	|	pause
	{
		$val = $pause.val;
	}
	|	internal_media
	{
		$val = $internal_media.val;
	}
	|	freecode
	{
		$val = $freecode.val;
	}
	|  	e
	{
		$val = $e.val;
	}
	|	s
	{
		$val = $s.val;
	}
	|	tagmarker
	{
		$val = $tagmarker.val;
	}
	|	long_feature
	{
		$val = $long_feature.val;
	}
	|	nonvocal
	{
		$val = $nonvocal.val;
	}
	|	overlap_point
	{
		$val = $overlap_point.val;
	}
	|	underline
	{
		$val = $underline.val;
	}
	|	italic
	{
		$val = $italic.val;
	}
	;
	
]]>
    </buffer>
    
    <buffer name="AST2TalkBank.g">
        <![CDATA[
pg
	:	^(PG_START (contentlist+=pgele)* ( phoreps += pho )* align?)
	->    template(
	        content={$contentlist},
	        ipas={$phoreps},
			alignment={$align.st}
	      )
	<<
\<pg\>
	<content; separator="">
	<ipas; separator="\n">
	<alignment>
\</pg\> >>
	;
	
pgele
	:	w 
	->	template( v={$w.st} )
		"<v>"
	|	g
	->	template( v={$g.st} )
		"<v>"
	|	quotation
	->	template( v={$quotation.st} )
		"<v>"
	|	quotation2
	->	template( v={$quotation2.st} )
		"<v>"
	|	pause
	->	template( v={$pause.st} )
		"<v>"
	|	internal_media
	->	template( v={$internal_media.st} )
		"<v>"
	|	freecode
	->	template( v={$freecode.st} )
		"<v>"
	|  	e
	->	template( v={$e.st} )
		"<v>"
	|	s
	->	template( v={$s.st} )
		"<v>"
	|	tagmarker
	->	template( v={$tagmarker.st} )
		"<v>"
	|	long_feature
	->	template( v={$long_feature.st} )
		"<v>"
	|	nonvocal
	->	template( v={$nonvocal.st} )
		"<v>"
	|	overlap_point
	->	template( v={$overlap_point.st} )
		"<v>"
	|	underline
	->	template( v={$underline.st} )
		"<v>"
	|	italic
	->	template( v={$italic.st} )
		"<v>"
	;
]]>
    </buffer>
    
    <!-- Includes -->
    <include>w.xml</include>
    <include>g.xml</include>
    <include>quotation.xml</include>
	<include>quotation2.xml</include>
	<include>pause.xml</include>
	<include>internalmedia.xml</include>
	<include>freecode.xml</include>
	<include>e.xml</include>
	<include>s.xml</include>
	<include>tagmarker.xml</include>
	<include>longfeature.xml</include>
	<include>nonvocal.xml</include>
	<include>overlappoint.xml</include>
	<include>underline.xml</include>
	<include>italic.xml</include>
	<include>pho.xml</include>
	<include>align.xml</include>

</chunk>
