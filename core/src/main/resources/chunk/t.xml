<?xml version="1.0" encoding="UTF-8"?>

<!-- 
Terminator
XPath - 
-->
<chunk xmlns="https://www.phon.ca/ns/chunk">
    
    <!-- Parser -->
    <buffer name="TalkBank2AST.g">
        <![CDATA[
t
	:	T_START T_ATTR_TYPE? mor? T_END 
	->	^(T_START T_ATTR_TYPE? mor?)
	;
]]>
    </buffer>
    
    <!-- Tree Walker -->
    <buffer name="AST2Phon.g">
        <![CDATA[
t returns [String val]
scope {
 	Group g; 	
}
@init {
 	$t::g = 
 		($u::r.numberOfGroups() > 0 ? $u::r.getGroup($u::r.numberOfGroups()-1) : $u::r.addGroup());
 }
	:	^(T_START T_ATTR_TYPE? mor?)
	{
	    // only add terminator from main line
	    if($wor.size() == 0) {
            // add terminator to last wordgroup
            String t = $T_ATTR_TYPE.text;
            String append = switch(t) {
                case "p" -> ".";
                case "q" -> "?";
                case "e" -> "!";
                case "broken for coding" -> "+.";
                case "trail off" -> "+...";
                case "trail off question" -> "+..?";
                case "question exclamation" -> "+!?";
                case "interruption" -> "+/.";
                case "interruption question" -> "+/?";
                case "self interruption" -> "+//.";
                case "self interruption question" -> "+//?";
                case "quotation next line" -> "+\"/.";
                case "quotation precedes" -> "+\".";
                case "missing CA terminator" -> "";
                case "technical break TCU continuation" -> "\u224b";
                case "no break TCU continuation" -> "\u2248";
                default -> "";
            };
            if(!append.equals(".") && !append.equals("?") && !append.equals("!") && append.length() > 0) {
                append = "(" + append + ")";
            }
            if(append.length() > 0) {
                $t::g.setOrthography(
                    (new OrthographyBuilder()).append($t::g.getOrthography()).append(append).toOrthography());
            }

            if($mor.val != null) {
                // mor is handled as a separate dependent tier
                String morVal = $mor.val;
                String tierName = $mor.tierName;

                // make sure dep tier exists in session
                TierDescription tierDesc = ensureTierExists(tierName, true);

                Tier<String> morTier = $u::r.getTier(tierName, String.class);
                if(morTier == null) {
                    morTier = sessionFactory.createTier(tierName, String.class, true);
                    for(int i = 0; i < $u::r.numberOfGroups(); i++) morTier.addGroup();
                    $u::r.putTier(morTier);
                }

                // add mor data as a dep tier of the current word(group)
                Group group = null;
                // get the correct word group holder
                if($t.size() > 0 || $ugrp.size() > 0) {
                    group = ($t.size() > 0 ? $t::g : $ugrp::g);
                } else if($u.size() > 0) {
                    group = $u::r.getGroup($u::r.numberOfGroups()-1);
                }

                String tierValue = group.getTier(tierDesc.getName(), String.class);
                if(tierValue == null) tierValue = new String();
                tierValue +=
                    (tierValue.length() == 0 ? "" : " ") + morVal;
                group.setTier(tierDesc.getName(), String.class, tierValue);
            }
		}
	}
	;
]]>
    </buffer>
    
    <buffer name="AST2TalkBank.g">
        <![CDATA[
t
	:	^(T_START T_ATTR_TYPE? m=mor?)
	->    template( type={$T_ATTR_TYPE}, morval={$m.st} )
	<<\<t type="<type>"<if(morval)>\><morval>\</t\><else>/\><endif> >>
	;
]]>
    </buffer>
	
	<include>mor.xml</include>
    
</chunk>